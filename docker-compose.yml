services:
  database:
    image: pgvector/pgvector:pg17
    restart: unless-stopped
    env_file: .env
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - ${DB_PORT}:5432
    volumes:
      - db_data:/data/db
      - ./01_initial_db.sql:/docker-entrypoint-initdb.d/01_initial_db.sql
      # - ./02_initial_funcs.sql:/docker-entrypoint-initdb.d/02_initial_funcs.sql
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}'" ]
      interval: 10s
      timeout: 3s
      retries: 2

  inmemory_db:
    image: redis:latest
    restart: unless-stopped
    env_file: .env
    command: /bin/sh -c "redis-server --requirepass $${REDIS_PASSWORD:?REDIS_PASSWORD variable is not set}"
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 2
    volumes:
      - inmemory_db_data:/var/lib/redis/data
    ports:
      - ${REDIS_PORT}:6379

  backend:
    restart: unless-stopped
    build:
      context: backend
      dockerfile: Dockerfile
    env_file: .env
    ports:
      - ${BACKEND_PUBLIC_PORT}:${BACKEND_PORT}
    depends_on:
      database:
        condition: service_healthy


volumes:
  db_data:
  inmemory_db_data: